<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
<style type="text/css">
html,
body {
  height: 100%;
  overflow: hidden;
}
.Loop {
  position: relative;
  height: 100%;
  overflow: auto;
}
section {
  position: relative;
  text-align: center;
  min-height: 300px;
  max-height: 700px;
  height: 80%;
}
::scrollbar {
  display: none;
}
body {
  font-family: "Avenir Next", Helvetica, sans-serif;
  font-weight: normal;
  font-size: 100%;
}
.red {
  background: #FF4136;
}
.green {
  background: #2ECC40;
}
.blue {
  background: #0074D9;
}
.orange {
  background: rebeccapurple;
}
h1 {
  margin: 0;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 100%;
  font-size: 80px;
  letter-spacing: 5px;
  color: #fff;
  text-transform: uppercase;
}
</style>
</head>
<body>
<main class="Loop js-loop">
  <section class="green">
    <h1>One</h1>
  </section>
  <section class="red">
    <h1>Two</h1>
  </section>
  <section class="blue">
    <h1>Three</h1>
  </section>
  <section class="orange">
    <h1>Four</h1>
  </section>
  

  <!--
  These blocks are the same as the first blocks to get that looping illusion going. You need to add clones to fill out a full viewport height.
  -->
  <section class="green is-clone">
    <h1>One</h1>
  </section>
  <section class="red is-clone">
    <h1>Two</h1>
  </section>
  <section class="blue is-clone">
    <h1>Three</h1>
  </section>
  <section class="orange is-clone">
    <h1>Four</h1>
  </section>
</main>

	<script type="text/javascript">
/*
Ininite looping scroll.
Tested and works well in latest verions of Chrome, Safari and Firefox.
Not built/tested for mobile.
*/
'use strict';
var doc = window.document,
  context = doc.getElementsByClassName('js-loop')[0],
  clones = context.getElementsByClassName('is-clone'),
  disableScroll,
  scrollHeight,
  scrollPos,
  clonesHeight,
  i;
function getScrollPos() {
  return (context.pageYOffset || context.scrollTop) - (context.clientTop || 0);
}
function setScrollPos(pos) {
  context.scrollTop = pos;
}
function getClonesHeight() {
  clonesHeight = 0;
  i = 0;
  for (i; i < clones.length; i += 1) {
    clonesHeight = clonesHeight + clones[i].offsetHeight;
  }
  return clonesHeight;
}
function reCalc() {
  scrollPos = getScrollPos();
  scrollHeight = context.scrollHeight;
  clonesHeight = getClonesHeight();
  if (scrollPos <= 0) {
    setScrollPos(1); // Scroll 1 pixel to allow upwards scrolling
  }
}
// Calculate variables
window.requestAnimationFrame(reCalc);
function scrollUpdate() {
  if (!disableScroll) {
    scrollPos = getScrollPos();
    if (clonesHeight + scrollPos >= scrollHeight) {
      // Scroll to the top when you¡¯ve reached the bottom
      setScrollPos(1); // Scroll down 1 pixel to allow upwards scrolling
      disableScroll = true;
    } else if (scrollPos <= 0) {
      // Scroll to the bottom when you reach the top
      setScrollPos(scrollHeight - clonesHeight);
      disableScroll = true;
    }
  }
  if (disableScroll) {
    // Disable scroll-jumping for a short time to avoid flickering
    window.setTimeout(function () {
      disableScroll = false;
    }, 40);
  }
}
context.addEventListener('scroll', function () {
  window.requestAnimationFrame(scrollUpdate);
}, false);
window.addEventListener('resize', function () {
  window.requestAnimationFrame(reCalc);
}, false);
// Just for the demo: Center the middle block on page load
window.onload = function () {
  setScrollPos(Math.round(clones[0].getBoundingClientRect().top + getScrollPos() - (window.innerHeight - clones[0].offsetHeight) / 2));
};
</script>

</body>
</html><!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

</body>
</html>